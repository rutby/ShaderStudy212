// Copyright (c) 2017-2018 Xiamen Yaji Software Co., Ltd.  

// Note: Current format version is experiment, the format may be changed.
// The future format may not be compatible, you may need to update the script manually.

// 注意：当前版本的格式是实验性的，之后还会进行修改。
// 后续版本的格式不保证兼容当前格式，可能需要手动升级到最新版本。，
%{
  techniques: [
    {
      passes: [
        {
          vert: vs
          frag: fs
          cullMode: none
          blend: true
        }
      ]
      layer: 0
    }
  ]
  properties: {
    texture: {
      type: sampler2D
      value: null
    }
    c_resolution:{
      type: vec2,
      value: [256,256]
    }
    c_time: {
      type: number
      value: 0
    }
  }
%}

%% vs {

  precision highp float;

  uniform mat4 cc_matViewProj;
  attribute vec3 a_position;
  attribute lowp vec4 a_color;
  attribute mediump vec2 a_uv0;
  varying mediump vec2 v_uv0;
  varying lowp vec4 v_color;

  void main () {
    vec4 pos = vec4(a_position, 1);
    pos = cc_matViewProj * pos;

    v_uv0 = a_uv0;
    v_color = a_color;

    gl_Position = pos;
  }
}

%% fs {
  precision highp float;

  uniform sampler2D texture;
  varying mediump vec2 v_uv0;
  varying lowp vec4 v_color;

  uniform vec2 c_resolution;
  uniform float c_time;

  // ======================================== core start
  #define F cos(x-y)*cos(y),sin(x+y)*sin(y)

  vec2 trans(vec2 p)
  {
    float d=c_time*0.2,x=8.*(p.x+d),y=8.*(p.y+d);
    return vec2(F);
  }

  vec2 wave(vec2 uv, vec2 resolution)
  {
    return uv+2./resolution.x*(trans(uv)-trans(uv+resolution.xy));
  }

  // ======================================== core end

  void main () {
    #if _USE_ETC1_TEXTURE
    #endif

    gl_FragColor = texture2D(texture, wave(v_uv0, c_resolution));
  }
}
