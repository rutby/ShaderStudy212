// Copyright (c) 2017-2018 Xiamen Yaji Software Co., Ltd.  

// Note: Current format version is experiment, the format may be changed.
// The future format may not be compatible, you may need to update the script manually.

// 注意：当前版本的格式是实验性的，之后还会进行修改。
// 后续版本的格式不保证兼容当前格式，可能需要手动升级到最新版本。，
%{
  techniques: [
    {
      passes: [
        {
          vert: vs
          frag: fs
          cullMode: none
          blend: true
        }
      ]
      layer: 0
    }
  ]
  properties: {
    texture: {
      type: sampler2D
      value: null
    }
    c_resolution:{
      type: vec2,
      value: [256,256]
    }
    c_time: {
      type: number
      value: 0
    }
  }
%}

%% vs {

  precision highp float;

  uniform mat4 cc_matViewProj;
  attribute vec3 a_position;
  attribute lowp vec4 a_color;
  attribute mediump vec2 a_uv0;
  varying mediump vec2 v_uv0;
  varying lowp vec4 v_color;

  void main () {
    vec4 pos = vec4(a_position, 1);
    pos = cc_matViewProj * pos;

    v_uv0 = a_uv0;
    v_color = a_color;

    gl_Position = pos;
  }
}

%% fs {
  precision highp float;

  uniform sampler2D texture;
  varying mediump vec2 v_uv0;
  varying lowp vec4 v_color;

  uniform vec2 c_resolution;
  uniform float c_time;

  // ======================================== core start
  void mainImage( out vec4 fragColor, in vec2 fragCoord, vec2 iResolution, float iTime )
  {
    vec2 uv = (-iResolution.xy + 2.0 * fragCoord.xy) / iResolution.y;
    vec2 uv2 = uv;
    //Asin a + B sin 2a +C sin 3a +D sin 4a
    uv2.x += iResolution.x/iResolution.y;
    uv2.x -= 2.0*mod(iTime,1.0*iResolution.x/iResolution.y);
    float width = -(1.0/(25.0*uv2.x));
    vec3 l = vec3(width , width* 1.9, width * 1.5);
    
    uv.y *= 2.0;
    float xx = abs(1.0/(20.0*max(abs(uv.x),0.3)));
    
    uv.x *=3.0;
    uv.y -= xx*(sin(uv.x)+3.0*sin(2.0*uv.x)+2.0*sin(3.0*uv.x)+sin(4.0*uv.x));//0.3*sin(uv.x)+0.2*sin(uv.x*2.0)+0.1*sin(uv.x*3.0)+0.1*sin(uv.x*4.0);
    vec3 col = mix(vec3(1),vec3(0),smoothstep(0.02,0.03,abs(uv.y)));
    fragColor = vec4(col*l,1.0);
  }

  // ======================================== core end

  void main () {
    #if _USE_ETC1_TEXTURE
    #endif

    mainImage(gl_FragColor, v_uv0, c_resolution, c_time);
  }
}