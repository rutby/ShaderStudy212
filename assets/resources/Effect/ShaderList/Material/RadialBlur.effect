// Copyright (c) 2017-2018 Xiamen Yaji Software Co., Ltd.  

// Note: Current format version is experiment, the format may be changed.
// The future format may not be compatible, you may need to update the script manually.

// 注意：当前版本的格式是实验性的，之后还会进行修改。
// 后续版本的格式不保证兼容当前格式，可能需要手动升级到最新版本。，
%{
  techniques: [
    {
      passes: [
        {
          vert: vs
          frag: fs
          cullMode: none
          blend: true
        }
      ]
      layer: 0
    }
  ]
  properties: {
    texture: {
      type: sampler2D
      value: null
    }
    c_resolution:{
      type: vec2,
      value: [256,256]
    }
    c_time: {
      type: number
      value: 0
    }
  }
%}

%% vs {

  precision highp float;

  uniform mat4 cc_matViewProj;
  attribute vec3 a_position;
  attribute lowp vec4 a_color;
  attribute mediump vec2 a_uv0;
  varying mediump vec2 v_uv0;
  varying lowp vec4 v_color;

  void main () {
    vec4 pos = vec4(a_position, 1);
    pos = cc_matViewProj * pos;

    v_uv0 = a_uv0;
    v_color = a_color;

    gl_Position = pos;
  }
}

%% fs {
  precision highp float;

  uniform sampler2D texture;
  varying mediump vec2 v_uv0;
  varying lowp vec4 v_color;

  uniform vec2 c_resolution;
  uniform float c_time;

  // ======================================== core start
  void mainImage( out vec4 fragColor, in vec2 fragCoord, in vec2 iCenter, in float iTime )
  {
    // float Strength = fract(iTime / 5.) / 5.;
    float Strength = 0.125;
    const int Samples =8; //multiple of 2
    
    vec2 uv = fragCoord.xy;
    
    vec2 dir = (fragCoord.xy-iCenter.xy);
    
    vec4 color0 = texture2D(texture,uv);

    vec4 color1 = vec4(0.0,0.0,0.0,0.0);
    for (int i = 0; i < Samples; i += 2) //operating at 2 samples for better performance
    {
      color1 += texture2D(texture,uv+float(i)/float(Samples)*dir*Strength);
      color1 += texture2D(texture,uv+float(i+1)/float(Samples)*dir*Strength);
    }
    color1 = color1/float(Samples);

    fragColor = mix(color0, color1, smoothstep(0.2-0.05, 0.2+0.05, length(dir)));
  }
  // ======================================== core end

  void main () {
    #if _USE_ETC1_TEXTURE
    #endif

    mainImage(gl_FragColor, v_uv0, vec2(0.5, 0.5), c_time);
  }
}
